{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","search","setSearch","display","setDisplay","data","setData","useEffect","newData","EmojiData","filter","emoji","title","toLowerCase","includes","className","placeholder","id","type","value","onChange","e","target","name","theme","size","onClick","map","symbol","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6PA6CeA,EAtCH,WACV,MAA2BC,mBAAS,IAApC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA6BF,mBAAS,IAAtC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAAuBJ,mBAAS,IAAhC,mBAAOK,EAAP,KAAYC,EAAZ,KAMA,OAJAC,qBAAU,WACN,IAAMC,EAAUC,EAAUC,QAAO,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,cAAcC,SAASb,EAAOY,kBACpFP,EAAQE,KACV,CAACP,IAED,gCAEI,qBAAKc,UAAU,OAAf,4BACA,uBAAOC,YAAY,mBAAmBC,GAAG,SAASC,KAAK,OAAOC,MAAOlB,EAAQmB,SAAU,SAACC,GAAD,OAAOnB,EAAUmB,EAAEC,OAAOH,UAClH,qBAAKJ,UAAU,UAAf,SAA0BZ,IAEzB,qBAAMY,UAAU,QAAhB,SACA,cAAC,IAAD,CACAQ,KAAO,SACPC,MAAQ,OACRC,KAAO,SACPC,QAAS,kBAAMtB,EAAW,SAG1B,qBAAKW,UAAU,QAAf,SACCV,EAAKsB,KAAI,SAAAhB,GAAK,OACb,8BACA,qBAAMe,QAAS,kBAAMtB,EAAWD,EAAQQ,EAAMiB,SAA9C,SACGjB,EAAMiB,UAFEjB,EAAMC,gBCrBZiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.1d2d9194.chunk.js","sourcesContent":["import React,{useEffect, useState} from 'react'\nimport EmojiData from './emoji.json';\nimport './App.css';\nimport Icon from \"react-crud-icons\";\n\nimport \"./react-crud-icons.css\"\n\nconst App = () => {\n  const [search,setSearch] = useState(\"\");\n  const [display,setDisplay] = useState(\"\");\n  const [data,setData] = useState([]);\n\n  useEffect(()=>{\n      const newData = EmojiData.filter(emoji => emoji.title.toLowerCase().includes(search.toLowerCase()));\n      setData(newData);\n  },[search])\n  return (\n    <div>\n     \n        <div className=\"head\">Emoji Search!!</div> \n        <input placeholder=\"search for emoji\" id=\"search\" type=\"text\" value={search} onChange={(e) => setSearch(e.target.value)} />\n       <div className=\"display\">{display}</div>\n     \n        <div  className=\"clear\">\n        <Icon\n        name = \"remove\"\n        theme = \"none\"\n        size = \"medium\"\n        onClick={() => setDisplay(\"\")}\n      />\n        </div>\n        <div className=\"emoji\">\n        {data.map(emoji =>\n          <div  key={emoji.title}>\n          <div  onClick={() => setDisplay(display+emoji.symbol)}>\n            {emoji.symbol} \n          </div>\n       \n        </div>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}